선형자료구조(linear data structure)

자료 저장,접근하는 관계 >> 연결성
배열, 리스트, 스택, 큐

1. 리스트
자료를 한줄로 연결한 구조

배열과는 엄밀하게 차이가 있음

메모리상에 연속된 공간을 할당(물리적으로 연속되지 않아도 논리적으로 할당 가능)(python에서 배열=논리적 할당=리스트) 

자료의 연결관계를 재구성할 수 있어 중간에 자료를 삽입, 삭제할 수 있음(자료처리알고리즘)


2. 스택
후입선출/LIFO (Last In, First Out)

자료를 쌓아올림(자료에 접근하기 위해 이후 쌓인 자료 먼저 제거해야함)

자료의 삽입과 삭제가 한곳에서만 이루어짐

자료처리: push()/pop()/empty()/top()
top/bottom
overflow/underflow

python 리스트 > 스택으로 운영

스택이 비어있음을 어떻게 알수 있는가?
> empty() -> true
> 

스택(Stack) 사용 사례
(1) 웹 브라우저 방문기록 (뒤로가기)
(2) 실행 취소(undo)
(3) 역순 문자열 만들기
(4) 후위 표기법 계산
(5) 재귀 알고리즘


3. 큐(Que)
선입선출/FIFO - 입력된 순서로 자료 접근

자료 삽입/삭제 장소 다름

자료 처리: push()/pop()/empty()
front/back(rear)
overflow/underflow
큐가 비어있음을 어떻게 알 수 있는가?

원형 큐 - 양방향 입출력

empty 검사하지 않으면 오류
empty=True >> 비어있다