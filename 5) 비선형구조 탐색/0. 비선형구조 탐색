'''인접행렬 >> 관계 없는 것도 나타냄 >> 메모리 낭비'''

1. 깊이우선탐색(DFS)
    - 하나의 정점을 탐색한 후 인접한 정점 중 아직 탐색하지 않은 정점을 탐색하는 방식을 재귀적으로 수행하는 알고리즘
    - 일관성 있는 선택 순서 필요
    - 백트랙: 더이상 탐색을 진행할수 없어서 부모노드로 되돌아 가는것
    - 스택을 이용

    - 재귀함수로 구현 >> 스택 구현 필요 X

2. 너비우선탐색(BFS)
    - 하나의 정점을 탐색한 후 인접한 정점을 모두 탐색한 후 탐색했던 정점 중 하나를 시작으로 다시 인접한 정점들을 차례로 방문하는 방식의 알고리즘
    - 큐를 이용
    - 이전 노드를 회귀하는 과정 X >> 백트랙/스택 필요 X

BFS와 DFS의 탐색 횟수 '동일'



3. 순차탐색(Sequential Search, Linear Search)
    - 리스트 처음부터 끝까지 차례로 모든 요소 비교
    - 가장 간단한 형태의 탐색

    - 시간복잡도: O(n) # 최악의 경우


4. 이진탐색(Binary Search)
    - 리스트 > 탐색 필요/불필요 영역으로 분할하며 탐색
    - 한 번 탐색 수행 >> 원소 1/2 = 2진탐색/2분탐색

    - 특징: 미리 정렬된 원소 집합에 대해서만 적용 가능, 자료 개수 많을수록 순차탐색보다 높은 효율.

    - 시간복잡도: O(logn)

