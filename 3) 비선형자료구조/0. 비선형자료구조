1. 트리: 자료들 사이에 하나이상의 연결구조를 가짐. 계층적 구조이며 순환이 없음
      - 노드(정점)/링크(간선) (node, link)
      - 부모/자식/루트
      - level/leaf/degree


2. 그래프: 자료들 사이에 하나이상의 연결구조를 가짐. 순환연결구조가 있음
      - 정점과 간선 (vertex, edge)
      - 방향/가중치

- 트리는 그래프의 특별한 형태
- 그래프 = 트리 포함하는 큰 구조

- 트리나 그래프로 나타내어 처리해야 하는 자료구조는 ?
      - 지도상에서 길찾기
      - 자료(노드)간의 관계성을 이용한 효율적인 탐색

노드 X = 트리/그래프
부모이면서 자식 = 그래프
선형 리스트 = 트리/그래프
순환 = 그래프
부모가 둘 이상 = 그래프
루트 노드가 둘 이상 = 그래프


1. 트리
자료 간 연결관계 > 배열or리스트로 저장
트리: 자료 간 계층적 연결관계 > 노드와 링크로 표현  추상화된 자료 구조

트리 용어:
노드/링크/루트
리프(단말노드)
자식/부모/형제 노드
레벨(root = 0 level)
차수
높이
이진트리
완전이진
포화이진
트리의 저장


자식 노드: 다른 노드로부터 연결된 노드
부모 노드: 다른 노드로 연결되어 나가는 노드
형제 노드: 같은 부모를 가진 자식 노드들
루트 노드: 최상위 부모 노드
단말 노드(leaf): 자식이 없는 노드
깊이: 루트 노드로부터 그 위치까지의 경로의 길이
높이: 루트 노드로부터 가장 깊은 노드까지의 경로의 길이 (노드=높이+1 개)
차수: 자식 노드의 개수(그래프에서는 진입/진출 차수로 구분)

최대 높이 lg(n)
이진탐색트리 최대 lg(n)번 탐색

2진 트리: 트리의 모든 차수가 2 이하인 트리

완전 2진 트리: 트리 구성하는 모든 노드 차수가 2 이하인 트리
트리의 가장 아래층을 제외한 모든 노드가 채워진 2진 트리
가장 아래층 노드 왼쪽부터 순서대로 채워짐

포화이진트리
: 이진트리이면서 서브트리까지 모두 빈 곳 없이 꽉찬 트리를 말한다.
노드의 개수는 n = 2^(높이) - 1이다.


인접 행렬과 인접 리스트자료들 사이의 연결 관계를 행렬로 표현한 것을 인접 행렬(adjacency matrix)이라고 하고 2차원 배열을 이용해 저장할 수 있으며,
자료들 사이의 연결 관계를 리스트를 이용해 표현한 것을 인접 리스트(adjacency list)라고 한다.


트리의 저장
: 트리는 비선형 구조이지만 결국 선형의 형태로 메모리에 저장해야 함
완전이진트리를 1차원 선형구조에 저장할 때 일반적인 특징(134쪽)
(루트 = 1번)
높이가 k인 완전 2진 트리의 최대 노드의 개수는 2^(k+1)-1개
n번 노드의 왼쪽 자식 노드의 번호 2n
오른쪽 2n+1
n번 노드의 부모 노드 번호 [n/2]


전위/중위/후위 순회


이진탐색트리(BST)
    - 이진탐색 + 트리
    - 각 노드에 값이 있다.
    - 노드의 왼쪽 서브트리에는 그 노드의 값보다 작은 값들을 지닌 노드들로 이루어져 있다.
    - 노드의 오른쪽 서브트리에는 그 노드의 값보다 큰 값들을 지닌 노드들로 이루어져 있다.
    - 좌우 하위 트리는 각각이 다시 이진 탐색 트리여야 한다

이진탐색트리에서의 검색(finding)
    - 이진탐색트리에서 키 x를 가진 노드를 검색하고자 할때, 트리에 해당 노드가 존재하면 해당 노드를 리턴하고, 존재하지 않으면 NULL을 리턴한다.
    - 검색하고자 하는 값을 루트노드와 먼저 비교하고, 일치할 경우 루트노드를 리턴한다.
    - 불일치하고 검색하고자 하는 값이 루트노드의 값보다 작을 경우 왼쪽 서브트리에서 재귀적으로 검색한다.
    - 불일치하고 검색하고자 하는 값이 루트노드의 값과 같거나 큰 경우 오른쪽 서브트리에서 재귀적으로 검색한다.
    - 구현은 객체지향형으로….
    - 이진탐색트리를 구성하여 inorder traversal 하면?

삽입 메소드
탐색 메소드
삭제 메소드
순회 메소드(in/pre/post order)



2. 그래프
정점/간선
방향
가중치

무방향 그래프 (양방향)
방향 그래프
무방향 가중 그래프
방향 가중 그래프 (네트워크)

그래프의 저장:
인접행렬/인접리스트
정점과의 연결 관계를 1/0으로 저장
-->> 메모리 소모 크다

# 인접 리스트의 효율
크기 v,e 그래프 저장공간
2차원 배열: v*v
인접 리스트: v+e
